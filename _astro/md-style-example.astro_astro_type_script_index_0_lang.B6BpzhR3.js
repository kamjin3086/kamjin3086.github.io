const a={"theme-github":{name:"GitHub",button:"bg-gray-200 text-gray-800 hover:bg-gray-300 focus:ring-gray-400",body:"bg-gray-50",prompt:"创建一个Markdown样式，模仿GitHub的亮色主题。整体感觉清晰、规范，适合技术文档。字体：使用无衬线字体（如Inter）。颜色：背景为白色，正文为深灰色（#24292e）。链接为蓝色（#0366d6），悬停时有下划线。标题：H1和H2有灰色底边线（#eaecef）。引用块：有灰色左边框和浅灰色背景（#f6f8fa）。代码：行内和代码块都使用浅灰色背景（#f6f8fa）。"},"theme-sspai":{name:"少数派",button:"bg-red-600 text-white hover:bg-red-700 focus:ring-red-500",body:"bg-white",prompt:"创建一个Markdown样式，模仿科技媒体「少数派」的现代风格。整体感觉活泼、有辨识度。字体：使用清晰的无衬线字体。颜色：主色调为醒目的红色（#D33F3F）。链接使用此红色，悬停时有红色底边线。标题：H2标题左侧有独特的红色竖线装饰。引用块：有红色左边框和浅灰色背景，文本为斜体。代码：行内代码为红色文本，代码块使用高对比度的暗色背景（#2d2d2d）。"},"theme-dark":{name:"暗色模式",button:"bg-gray-700 text-white hover:bg-gray-600 focus:ring-gray-500",body:"bg-black",prompt:"创建一个通用的暗色Markdown样式，提供舒适的夜间阅读体验。字体：使用无衬线字体。颜色：背景为深灰色（#1a1a1b），正文为灰白色（#d7dadc）。链接为亮蓝色（#4f9eed）。标题：颜色为纯白。引用块：有蓝色左边框和更深一点的灰色背景（#272729）。代码：行内和代码块都使用与引用块相同的深灰色背景。"},"theme-academic":{name:"学术论文",button:"bg-blue-100 text-blue-800 hover:bg-blue-200 focus:ring-blue-400",body:"bg-gray-50",prompt:"创建一个Markdown样式，模拟学术论文的排版。整体感觉严谨、专业，适合长文阅读。字体：正文使用衬线字体（如Lora），标题使用无衬线字体（如Inter）以形成对比。颜色：白底黑字。链接为深蓝色（#1a5b9c），有浅蓝色底边线。布局：内容区域最大宽度限制在800px左右。引用块：仅有灰色左边框，无背景色，文本为斜体。代码：使用浅灰色背景。"},"theme-swiss":{name:"瑞士简约",button:"bg-yellow-300 text-black hover:bg-yellow-400 focus:ring-yellow-500",body:"bg-white",prompt:"创建一个基于瑞士平面设计主义的Markdown样式。整体感觉极简、现代、功能性强。字体：使用无衬线字体（如Inter），标题字重非常大（900）。颜色：白底黑字。链接为蓝色（#007aff），无下划线。布局：强调元素间距和对齐。引用块：仅有蓝色左边框，无背景色，左内边距较大。代码：行内和代码块都使用统一的浅灰色背景（#f0f0f0）。"},"theme-bear":{name:"Bear",button:"bg-red-100 text-red-800 hover:bg-red-200 focus:ring-red-500",body:"bg-white",prompt:"创建一个Markdown样式，灵感来自笔记应用Bear。整体感觉优雅、精致。字体：清晰的无衬线字体。颜色：主强调色为一种复古的红色（#C44536）。链接使用此红色，并带有虚线式下划线。引用块：只有一条极简的浅灰色左边框。代码：行内代码为红色文本，代码块使用'Nord'主题的暗色背景（#2E3440）。"},"theme-notion":{name:"Notion",button:"bg-gray-200 text-gray-800 hover:bg-gray-300 focus:ring-gray-400",body:"bg-gray-50",prompt:"创建一个模仿生产力工具Notion的Markdown样式。风格极简、克制，注重内容本身。字体：无衬线字体。颜色：背景为略带灰的白色（#F7F6F3），正文为深灰（#37352F）。链接与正文同色，但有灰色底边线，悬停时有浅灰色背景。引用块：有深灰色左边框，无背景色。代码：行内代码有浅灰色圆角背景，文本为红色（#EB5757）。代码块背景为浅灰色（#F7F6F3）。"},"theme-dracula":{name:"Dracula",button:"bg-purple-800 text-white hover:bg-purple-900 focus:ring-purple-600",body:"bg-gray-900",prompt:"创建一个基于'Dracula'代码主题的Markdown样式。整体是多彩的暗色风格。字体：使用等宽字体进行代码展示。颜色：背景为深蓝紫色（#282a36），正文为灰白色（#f8f8f2）。标题为淡紫色（#bd93f9），链接为粉色（#ff79c6），行内代码为绿色（#50fa7b）。引用块：有黄色左边框和深灰色背景（#44475a）。代码块与主背景同色，但有边框。"}},f=`
    <h1>Markdown: 一种轻量级标记语言</h1>
    <p>Markdown 是一种<strong>轻量级标记语言</strong>，它允许人们使用易读易写的纯文本格式编写文档，然后转换成有效的XHTML（或者HTML）文档。这种语言吸收了很多在电子邮件中已有的纯文本标记的特性。</p>
    <h2>核心理念</h2>
    <p>它的核心理念是：<em>"易读易写"</em>。一份使用 Markdown 格式撰写的文件应该可以直接以纯文本发布，并且看起来不会像是由很多标签或是格式指令所构成。可以访问 <a href="#">Markdown 官网</a> 了解更多。</p>
    <blockquote><p>可读性，无论如何，都是最重要的。一份 Markdown 格式的文档，应该可以直接以纯文本发布，并且看起来不会像是由很多标签或是格式指令所构成。</p></blockquote>
    <h3>功能列表</h3>
    <ul><li>标题</li><li>段落与换行</li><li>区块引言</li><li>列表：有序和无序</li></ul>
    <h3>实现步骤</h3>
    <ol><li>学习基本语法。</li><li>选择一个合适的编辑器。</li><li>开始你的创作！</li></ol>
    <hr>
    <p>你也可以插入代码。对于单行代码，可以使用行内代码，例如 <code>const greeting = "Hello World";</code> 这样。</p>
    <p>对于多行代码块，可以这样表示：</p>
    <pre><code>// 这是一个 JavaScript 代码块示例
function factorial(n) {
  if (n === 0) {
    return 1;
  }
  return n * factorial(n - 1);
}
console.log(factorial(5)); // 输出: 120
</code></pre>
    <p>希望这些示例能帮助你选择最喜欢的风格！</p>
`;let m="theme-github",d,c,i,e;function b(){if(d=document.getElementById("markdown-container"),c=document.getElementById("content"),i=document.getElementById("theme-switcher"),e=document.getElementById("copy-prompt-btn"),!d||!c||!i||!e){console.error("无法找到必要的DOM元素");return}c.innerHTML=f;for(const t in a){const r=a[t],o=document.createElement("button");o.dataset.theme=t,o.textContent=r.name,o.className="px-4 py-2 rounded-md text-sm font-medium focus:outline-none focus:ring-2 focus:ring-offset-2 transition-all",i.appendChild(o)}i.addEventListener("click",t=>{if(t.target instanceof HTMLElement&&t.target.tagName==="BUTTON"){const r=t.target.dataset.theme;r&&u(r)}}),e.addEventListener("click",()=>{const t=a[m].prompt;p(t)});const n=localStorage.getItem("markdown_theme")||"theme-github";u(n)}function u(n){if(!a[n]||!d||!i||!e)return;m=n,d.className="rounded-lg shadow-md p-6 sm:p-10 transition-all duration-300",d.classList.add(n),document.body.className="",document.body.classList.add(a[n].body,"transition-colors","duration-300"),i.querySelectorAll("button").forEach(o=>{const s=o.dataset.theme;if(s)if(o.className="px-4 py-2 rounded-md text-sm font-medium focus:outline-none focus:ring-2 focus:ring-offset-2 transition-all",s===n){o.classList.add(...a[s].button.split(" "));const l=a[s].button.split(" ").find(g=>g.startsWith("focus:ring-"));l&&o.classList.add("ring-2","ring-offset-2",l.replace("focus:",""))}else o.classList.add("bg-gray-200","text-gray-600","hover:bg-gray-300")});const t="px-5 py-2.5 rounded-md text-sm font-semibold focus:outline-none focus:ring-2 focus:ring-offset-2 transition-all duration-200 ease-in-out",r=a[n].button;e.className=`${t} ${r}`,localStorage.setItem("markdown_theme",n)}function p(n){if(!e)return;const t=document.createElement("textarea");t.value=n,t.style.position="fixed",t.style.left="-9999px",document.body.appendChild(t),t.select();try{document.execCommand("copy");const r=e.textContent;e.textContent="已复制！",setTimeout(()=>{e&&(e.textContent=r)},2e3)}catch(r){console.error("无法复制提示词: ",r);const o=e.textContent;e.textContent="复制失败",setTimeout(()=>{e&&(e.textContent=o)},2e3)}document.body.removeChild(t)}typeof window<"u"&&document.addEventListener("DOMContentLoaded",b);
